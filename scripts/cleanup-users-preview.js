/**
 * Preview script: Xem danh s√°ch users s·∫Ω b·ªã x√≥a
 * Ch·ªâ gi·ªØ l·∫°i admin v√† teacher
 */

require('dotenv').config({ path: '.env.local' })
const { createClient } = require('@supabase/supabase-js')

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå Thi·∫øu SUPABASE_URL ho·∫∑c SUPABASE_SERVICE_ROLE_KEY')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function previewUsersToDelete() {
  console.log('üîç ƒêANG KI·ªÇM TRA USERS...\n')

  // Count users by role
  const { data: allUsers, error: countError } = await supabase
    .from('users')
    .select('id, name, email, role, created_at')
    .order('created_at', { ascending: false })

  if (countError) {
    console.error('‚ùå L·ªói khi ƒë·∫øm users:', countError)
    return
  }

  const adminUsers = allUsers.filter(u => u.role === 'admin')
  const teacherUsers = allUsers.filter(u => u.role === 'teacher')
  const otherUsers = allUsers.filter(u => u.role !== 'admin' && u.role !== 'teacher')

  console.log('üìä TH·ªêNG K√ä USERS HI·ªÜN T·∫†I:')
  console.log(`   T·ªïng s·ªë users: ${allUsers.length}`)
  console.log(`   ‚úÖ Admin: ${adminUsers.length} (GI·ªÆ L·∫†I)`)
  console.log(`   ‚úÖ Teacher: ${teacherUsers.length} (GI·ªÆ L·∫†I)`)
  console.log(`   ‚ùå Kh√°c (parent/student): ${otherUsers.length} (S·∫º X√ìA)\n`)

  console.log('üë• DANH S√ÅCH USERS S·∫º GI·ªÆ L·∫†I:\n')
  console.log('Admin:')
  adminUsers.forEach(u => {
    console.log(`   - ${u.name || 'N/A'} (${u.email}) - ID: ${u.id}`)
  })
  
  console.log('\nTeacher:')
  teacherUsers.forEach(u => {
    console.log(`   - ${u.name || 'N/A'} (${u.email}) - ID: ${u.id}`)
  })

  console.log('\n\nüóëÔ∏è  DANH S√ÅCH USERS S·∫º B·ªä X√ìA:\n')
  otherUsers.forEach(u => {
    console.log(`   - ${u.name || 'N/A'} (${u.email}) - Role: ${u.role} - ID: ${u.id}`)
  })

  console.log('\n\n‚ö†Ô∏è  C·∫¢NH B√ÅO:')
  console.log(`   - S·∫Ω x√≥a ${otherUsers.length} users`)
  console.log(`   - C√°c d·ªØ li·ªáu li√™n quan (assignments, notifications, etc.) c√≥ th·ªÉ b·ªã ·∫£nh h∆∞·ªüng`)
  console.log(`   - Thao t√°c KH√îNG TH·ªÇ HO√ÄN T√ÅC\n`)
}

previewUsersToDelete()
  .then(() => {
    console.log('‚úÖ Preview ho√†n t·∫•t')
    process.exit(0)
  })
  .catch(error => {
    console.error('‚ùå L·ªói:', error)
    process.exit(1)
  })

